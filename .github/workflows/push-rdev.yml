name: Push Remote Dev

on:
  pull_request:
    branches: "**"
    # TODO: revert
    # branches:
    # - "edu*"

env:
  # Force using BuildKit instead of normal Docker, required so that metadata
  # is written/read to allow us to use layers of previous builds as cache.
  DOCKER_BUILDKIT: 1
  COMPOSE_DOCKER_CLI_BUILD: 1
  DOCKER_REPO: ${{ secrets.ECR_REPO }}/

jobs:
  build-push-images:
    runs-on: ubuntu-20.04
    strategy:
      matrix:
        image:
          - dockerfile: src/backend/Dockerfile.gisaid
            context: ./src/backend/
            name: genepi-gisaid
          - dockerfile: src/backend/Dockerfile.nextstrain
            context: ./src/backend/
            name: genepi-nextstrain
          - dockerfile: src/backend/Dockerfile.pangolin
            context: ./src/backend/
            name: genepi-pangolin
          - dockerfile: src/backend/Dockerfile
            context: ./src/backend/
            name: genepi-backend
          - dockerfile: src/frontend/Dockerfile
            context: ./src/frontend/
            name: genepi-frontend
    steps:
      - name: Configure AWS Credentials
        uses: aws-actions/configure-aws-credentials@v1
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: us-west-2
          role-to-assume: ${{ secrets.AWS_ROLE_TO_ASSUME }}
          role-duration-seconds: 900
      - name: Build And Push
        uses: chanzuckerberg/github-actions/.github/actions/docker-build-push@a9d5b0b1c7b2f880edb1afd4572635ce27b78442
        with:
          dockerfile: ${{ matrix.image.dockerfile }}
          context: ${{ matrix.image.context }}
          name: ${{ matrix.image.name }}
          registry: ${{ secrets.ECR_REPO }}

  create-update-rdev:
    runs-on: ubuntu-20.04
    needs:
      - build-push-images
    steps:
      - name: Configure AWS Credentials
        uses: aws-actions/configure-aws-credentials@v1
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: us-west-2
          role-to-assume: ${{ secrets.AWS_ROLE_TO_ASSUME }}
          role-duration-seconds: 900
      - name: Get Stack Name
        id: stack-name
        uses: actions/github-script@v6
        with:
          script: |
            const prefix = "rdev-"
            const ref = context.ref_name
            console.log(`our context ${JSON.stringify(context)}, ref: ${ref}`)
            if (!ref.startsWith(prefix)) {
              core.error(`ref ${ref} did not start with ${prefix}`)
              return
            }
            const stackName = ref.slice(length(prefix))
            core.setOutput('stack-name', stackName)
      - name: Create or update rdev
        uses: chanzuckerberg/github-actions/.github/actions/deploy-happy-stack@a9d5b0b1c7b2f880edb1afd4572635ce27b78442
        with:
          tfe-token: ${{ secrets.TFE_TOKEN }}
          stack-name: ${{ steps.stack-name.stack-name }}
