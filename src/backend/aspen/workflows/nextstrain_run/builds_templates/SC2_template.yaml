inputs:
  - name: "root_ref"
    metadata: "data/references_metadata.tsv"
    sequences: "data/references_sequences.fasta"
  - name: "gisaid"
    metadata: "data/metadata_gisaid.tsv"
    sequences: "data/sequences_gisaid.fasta"
  - name: "aspen"
    metadata: "data/metadata_aspen.tsv"
    sequences: "data/sequences_aspen.fasta"

builds:
  aspen:
    region: global
    country: {country}
    division: {division}
    location: {location}
    subsampling_scheme: {tree_type}
    title: CZ Gen Epi Tree  # This gets replaced with a more specific title in builder_base.py

## Auxiliary files
files:
  include: "data/include.txt" # for the automtic-built overview tree, this file needs to exist but can be empty. for the other trees, this includes user selected samples.
  description: "my_profiles/aspen/description_{tree_type}.md"  # current file names use lower case but tree_type is upper case. need to consolidate 
  auspice_config: "my_profiles/aspen/aspen_auspice_config_v2.json"   # this will work for all

## Parameters
filter:
  root_ref:
    skip_diagnostics: True
    
refine:
  keep_polytomies: True
  clock_filter_iqd: 3
  
priorities:
  crowding_penalty: {crowding_penalty_per_tree_type}

## Subsampling schemas
subsampling:

  OVERVIEW:
    root:
      exclude: "--exclude-where 'root_ref!=yes'"

    group:
      group_by: "year month"
      max_sequences: 2000
      query: --query "(location == '{location}') & (division == '{division}')"

    state:
      group_by: "location year month"
      max_sequences: 500
      query: --query "(location != '{location}') & (division == '{division}')" # exclude add'l samples from {location}
      priorities:
        type: "proximity"
        focus: "group"

    country:
      group_by: "division year month"
      max_sequences: 400
      query: --query "(division != '{division}') & (country == '{country}')" # exclude add'l samples from CA
      priorities:
        type: "proximity"
        focus: "group"

    international:
      group_by: "region year month"
      max_sequences: 100
      query: --query "(country != '{country}')" # exclude add'l samples from USA
      priorities:
          type: "proximity"
          focus: "group"

    international_serial_sampling:
      group_by: "region year month"
      seq_per_group: 2
      query: --query "(country != '{country}')"



  TARGETED:
    root:
      exclude: "--exclude-where 'root_ref!=yes'"

    focal:
      exclude: "--exclude-all"

    closest:
      max_sequences: 100
      priorities:
        type: "proximity"
        focus: "focal"

    group:
      group_by: "year month"
      max_sequences: 25
      query: --query "(location == '{location}') & (division == '{division}')"
      priorities:
        type: "proximity"
        focus: "focal"

    state:
      group_by: "location year month"
      max_sequences: 25
      query: --query "(location != '{location}') & (division == '{division}')" # exclude add'l samples from {location}
      priorities:
        type: "proximity"
        focus: "focal"

    country:
      group_by: "division year month"
      max_sequences: 25
      query: --query "(division != '{division}') & (country == '{country}')" # exclude add'l samples from CA
      priorities:
        type: "proximity"
        focus: "focal"

    international:
      group_by: "region year month"
      max_sequences: 25
      query: --query "(country != '{country}')" # exclude add'l samples from USA
      priorities:
        type: "proximity"
        focus: "focal"

    international_serial_sampling:
      group_by: "region year month"
      seq_per_group: 2
      query: --query "(country != '{country}')"


  NON_CONTEXTUALIZED:
    root:
      exclude: "--exclude-where 'root_ref!=yes'"

    group:
      group_by: "year month"
      max_sequences: 2000
      query: --query "(location == '{location}') & (division == '{division}')"
