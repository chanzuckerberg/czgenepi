actor User {}

resource Sample {
  permissions = ["read", "delete"];
  roles = ["reader", "writer"];
  relations = { parent: Group };

  "delete" if "admin";
  "read" if "member";

  "reader" if "admin";
  "reader" if "member" on "parent";
  "writer" if "owner" on "parent";
}

resource Group {
  roles = ["member", "owner"];
  "member" if "owner";
}

has_role(user: User, role_name: String, resource: Resource) if
  role in user.roles and
  role.name = role_name and
  role.resource = resource;

has_relation(group: Group,
             "parent", sample: Sample) if
  sample.group = group;

has_permission(_user: User, "read", sample: Sample) if
  sample.isPublic;

allow(actor, action, resource) if
  has_permission(actor, action, resource);


#allow(user: User, "read", sample: Sample) if
#    sample.submitting_group in user.user_roles.group;

#allow(_: User, "read", _: User);
