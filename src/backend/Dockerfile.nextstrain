## Dockerfile for aspen batch jobs
##
##
FROM nextstrain/base:build-20221207T221900Z
ARG DEBIAN_FRONTEND=noninteractive

LABEL maintainer = "CZ Gen Epi"
LABEL description = "Image for CZ Gen Epi nextstrain workflow"

# TODO -- Preferably want to drop to non-root user for job runs.
# RUN commands below necessitate root for some of them. Nextstrain now has
# a non-root user (`USER nextstrain:nextstrain) as part of its Dockerfile
# https://github.com/nextstrain/docker-base/blob/master/Dockerfile#L259
# Probably want to use that once we have chance to test its fine for job runs.
USER root

RUN sed -i s/archive.ubuntu.com/us-west-2.ec2.archive.ubuntu.com/ /etc/apt/sources.list; \
    echo 'APT::Install-Recommends "false";' > /etc/apt/apt.conf.d/98idseq; \
    echo 'APT::Install-Suggests "false";' > /etc/apt/apt.conf.d/99idseq

RUN apt-get -qq update && apt-get -qq -y install \
    jq \
    git \
    patch \
    locales \
    zstd \
    nano \
    seqtk \
    unzip \
    build-essential \
    && locale-gen en_US.UTF-8

# Install poetry
RUN apt install -y libdigest-sha-perl
ENV POETRY_VERSION=1.3.2
RUN python3 -m pip install poetry==$POETRY_VERSION

ENV FLASK_ENV=development

RUN pip3 install nextstrain-cli csv-diff s3fs[boto3] aiobotocore[awscli,boto3] envdir fsspec pandas
RUN pip3 uninstall -y pangoLEARN

RUN mkdir /ncov && \
    cd /ncov && \
    git init && \
    git remote add origin https://github.com/chanzuckerberg/ncov.git && \
    git fetch origin czgenepi && \
    git reset --hard FETCH_HEAD

# Add support for our custom mpox workflow
RUN echo 1
RUN mkdir /mpox && \
    cd /mpox && \
    git init && \
    git remote add origin https://github.com/chanzuckerberg/monkeypox.git && \
    git fetch origin subsampling && \
    git reset --hard FETCH_HEAD

RUN mkdir -p /ncov/auspice
RUN mkdir -p /ncov/logs

WORKDIR /usr/src/app

# Poetry: install app
COPY pyproject.toml poetry.lock environment.yaml ./
COPY third-party ./third-party
RUN wget https://github.com/chanzuckerberg/oso/archive/czge-oso25.zip -O oso.zip && \
    unzip -q oso.zip && \
    mv oso-czge-oso25/languages/python/sqlalchemy-oso sqlalchemy-oso && rm oso.zip
RUN poetry config virtualenvs.create false && \
    poetry install
ENV PYTHONPATH=.

COPY . .
# Install the aspen package
RUN poetry install
RUN chmod a+w /ncov/auspice /ncov/logs
RUN chmod a+w /mpox/ /mpox/config

# TODO - Mismatch between poetry and augur deps forces us to manually install jsonschema v3 here
RUN pip install jsonschema==3.*

WORKDIR /nextstrain
