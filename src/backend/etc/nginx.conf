worker_processes auto;
user www-data;

daemon off;
error_log  /dev/stderr;
pid /var/run/nginx.pid;

# configuration file /etc/nginx/modules-enabled/50-mod-http-upstream-fair.conf:
load_module modules/ngx_http_upstream_fair_module.so;

events {
  worker_connections 768; # increase if you have lots of clients
  accept_mutex on; # set to 'on' if nginx worker_processes > 1
  use epoll; # to enable for Linux 2.6+
}

http {
  include /etc/nginx/mime.types;
  # fallback in case we can't determine a type
  default_type application/octet-stream;
  log_format custom 'nginx - $remote_addr - [$time_local] '
                             '"$request" $status $body_bytes_sent '
                             '"$http_referer" "$http_user_agent"'
                             ' rt=$request_time urt=$upstream_response_time';
  access_log /dev/stdout custom;
  sendfile on;

  upstream fastapi_server {
    # for UNIX domain socket setups
    server unix:/var/run/uvicorn.sock fail_timeout=0;
  }

  server {
    listen 3000 deferred;
    client_max_body_size 4G;

    keepalive_timeout 60;

    location / {
      proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
      proxy_set_header X-Forwarded-Proto $scheme;
      proxy_set_header Host $http_host;
      # we don't want nginx trying to do something clever with
      # redirects, we set the Host: header above already.
      proxy_redirect off;
      proxy_pass http://fastapi_server;
    }

  }
}
