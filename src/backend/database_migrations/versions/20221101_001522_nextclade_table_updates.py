"""

Create Date: 2022-11-01 00:15:31.986238

"""
import enumtables  # noqa: F401
import sqlalchemy as sa
from alembic import op
from sqlalchemy.dialects import postgresql

# revision identifiers, used by Alembic.
revision = "20221101_001522"
down_revision = "20221026_212147"
branch_labels = None
depends_on = None


def upgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    op.alter_column(
        "sample_qc_metrics",
        "raw_qc_output",
        existing_type=sa.TEXT,
        type_=postgresql.JSONB(astext_type=sa.Text()),
        postgresql_using="raw_qc_output::jsonb",
        nullable=True,
        schema="aspen",
    )
    op.alter_column(
        "sample_lineages",
        "raw_lineage_output",
        existing_type=sa.TEXT,
        type_=postgresql.JSONB(astext_type=sa.Text()),
        postgresql_using="raw_lineage_output::jsonb",
        nullable=True,
        schema="aspen",
    )

    op.alter_column(
        "sample_lineages",
        "lineage_probability",
        existing_type=postgresql.DOUBLE_PRECISION(precision=53),
        nullable=True,
        schema="aspen",
    )
    op.create_unique_constraint(
        op.f("uq_sample_mutations_sample_id"),
        "sample_mutations",
        ["sample_id"],
        schema="aspen",
    )

    op.create_unique_constraint(
        op.f("uq_sample_qc_metrics_sample_id"),
        "sample_qc_metrics",
        ["sample_id"],
        schema="aspen",
    )


def downgrade():
    raise NotImplementedError("Downgrading the database is not allowed")
